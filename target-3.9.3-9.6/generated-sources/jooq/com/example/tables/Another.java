/*
 * This file is generated by jOOQ.
*/
package com.example.tables;


import com.example.DefaultSchema;
import com.example.Keys;
import com.example.tables.records.AnotherRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Another extends TableImpl<AnotherRecord> {

    private static final long serialVersionUID = -1717504757;

    /**
     * The reference instance of <code>another</code>
     */
    public static final Another ANOTHER = new Another();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnotherRecord> getRecordType() {
        return AnotherRecord.class;
    }

    /**
     * The column <code>another.id</code>.
     */
    public final TableField<AnotherRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>another.status</code>.
     */
    public final TableField<AnotherRecord, Object> STATUS = createField("status", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "");

    /**
     * Create a <code>another</code> table reference
     */
    public Another() {
        this("another", null);
    }

    /**
     * Create an aliased <code>another</code> table reference
     */
    public Another(String alias) {
        this(alias, ANOTHER);
    }

    private Another(String alias, Table<AnotherRecord> aliased) {
        this(alias, aliased, null);
    }

    private Another(String alias, Table<AnotherRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnotherRecord> getPrimaryKey() {
        return Keys.ANOTHER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnotherRecord>> getKeys() {
        return Arrays.<UniqueKey<AnotherRecord>>asList(Keys.ANOTHER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Another as(String alias) {
        return new Another(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Another rename(String name) {
        return new Another(name, null);
    }
}
